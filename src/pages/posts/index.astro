---
import FormattedDate from '@components/FormattedDate.astro';
import Navigation from '@components/Navigation.astro';
import Layout from '@layouts/Layout.astro';
import { getPosts, type Post } from '@lib/posts';

const posts = await getPosts();

interface Entry {
  year: number;
  posts: Post[];
}

const entries: Entry[] = posts.reduce<Entry[]>((entries, post) => {
  const currentYear = post.data.date.getFullYear();
  const lastEntry = entries[entries.length - 1];
  const yearChanged = lastEntry?.year !== currentYear;
  return yearChanged
    ? [
        ...entries,
        {
          year: currentYear,
          posts: [post],
        },
      ]
    : [
        ...entries.slice(0, entries.length - 1),
        {
          ...lastEntry,
          posts: [...lastEntry.posts, post],
        },
      ];
}, []);
---

<Layout title="기록">
  <main>
    <ul>
      {
        entries.map(({ year, posts }) => (
          <>
            <h3>{year}</h3>
            <ul>
              {posts.map((post) => (
                <li>
                  <FormattedDate date={post.data.date} />
                  <a href={post.$link}>{post.data.title}</a>
                </li>
              ))}
            </ul>
          </>
        ))
      }
    </ul>
    <Navigation to="home" />
  </main>
</Layout>

<style>
  ul {
    max-width: min(80ch, 100%);
    margin: auto;
  }

  @media (min-width: 720px) {
    li a:not(:first-child) {
      margin-inline-start: 1ch;
    }
  }

  @media (max-width: 720px) {
    li a {
      display: block;
      width: fit-content;
      margin-inline-start: initial;
    }
  }

  ul ~ :global(a:last-child) {
    margin-block-start: 2rem;
    text-align: end;
  }
</style>
